# Generated by Django 4.0.3 on 2022-07-10 22:48

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/%Y/%m/%d')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo', models.CharField(choices=[('Consulta', 'Consulta'), ('Revisión de Exámenes', 'Revisión de Exámenes'), ('Otro', 'Otro')], max_length=20, verbose_name='Motivo de cita')),
                ('estado', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
            },
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostico', models.TextField(verbose_name='Diagnóstico')),
            ],
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_esp', models.CharField(max_length=50, unique=True)),
                ('descrip', models.TextField(verbose_name='Descripción de Especialidad')),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
            },
        ),
        migrations.CreateModel(
            name='Especialidad_Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario', models.CharField(choices=[('8:h00 - 8h30', '8:h00 - 8h30'), ('8h30 - 9h00', '8h30 - 9h00'), ('9h00 - 10h00', '9h00 - 10h00'), ('10h00 - 10h30', '10h00 - 10h30'), ('10h30 - 11h00', '10h30 - 11h00'), ('11h30 - 12h00', '11h30 - 12h00'), ('12:h00 - 12h30', '12:h00 - 12h30'), ('12h30 - 13h00', '12h30 - 13h00'), ('13h00 - 13h30', '13h00 - 13h30'), ('13h30 - 14h00', '13h30 - 14h00'), ('14h300 - 14h00', '14h300 - 14h00'), ('14h00 - 14h30', '14h00 - 14h30'), ('14:h30 - 15h00', '14:h30 - 15h00'), ('15h00 - 15h30', '15h00 - 15h30'), ('15h30 - 16h00', '15h30 - 16h00'), ('16h00 - 16h30', '16h00 - 16h30'), ('16h30 - 17h00', '16h30 - 17h00'), ('17h00 - 17h30', '17h00 - 17h30'), ('17h30 - 18h00', '17h30 - 18h00')], help_text='Seleccione el horario', max_length=30, verbose_name='Horario de Atención')),
                ('consul', models.CharField(choices=[('Consultorio 1', 'Consultorio 1'), ('Consultorio 2', 'Consultorio 2'), ('Consultorio 3', 'Consultorio 3'), ('Consultorio 4', 'Consultorio 4')], help_text='Seleccione un consultorio', max_length=20, verbose_name='Consultorio')),
                ('fecha_cita', models.DateField(default=datetime.datetime.now)),
                ('dispo', models.BooleanField(default=False)),
                ('id_especialidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.especialidad', verbose_name='Nombre de la Especialidad')),
            ],
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Examen')),
                ('descrip', models.CharField(max_length=100, verbose_name='Descripción del Examen')),
            ],
        ),
        migrations.CreateModel(
            name='HistoriaClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('presentacion', models.CharField(max_length=50)),
                ('volumen', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Medicamento',
                'verbose_name_plural': 'Medicamentos',
            },
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Indicación')),
                ('medicamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.medicamento', verbose_name='Medicamento')),
            ],
            options={
                'verbose_name': 'Receta',
                'verbose_name_plural': 'Recetas',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_nacimiento', models.DateField()),
                ('edad', models.IntegerField(blank=True, verbose_name='Edad')),
                ('telefono', models.CharField(max_length=10, unique=True, verbose_name='Celular')),
                ('cedula', models.CharField(max_length=10, unique=True, verbose_name='Identificación')),
                ('direccion', models.TextField(max_length=100, verbose_name='Dirección')),
                ('ciudad_red', models.CharField(max_length=30, verbose_name='Ciudad de Residencia')),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=50)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usuarioP', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_nacimiento', models.DateField()),
                ('edad', models.IntegerField(blank=True, verbose_name='Edad')),
                ('telefono', models.CharField(max_length=10, unique=True, verbose_name='Celular')),
                ('cedula', models.CharField(max_length=10, unique=True, verbose_name='Identificación')),
                ('direccion', models.TextField(max_length=100, verbose_name='Dirección')),
                ('ciudad_red', models.CharField(max_length=30, verbose_name='Ciudad de Residencia')),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=50)),
                ('esp', models.ManyToManyField(through='citas.Especialidad_Medico', to='citas.especialidad')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medico',
                'verbose_name_plural': 'Medico',
            },
        ),
        migrations.CreateModel(
            name='HistPac',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consul', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.consulta')),
                ('hist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.historiaclinica')),
            ],
        ),
        migrations.AddField(
            model_name='historiaclinica',
            name='paciente',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='citas.paciente', verbose_name='historia_pac'),
        ),
        migrations.AddField(
            model_name='especialidad_medico',
            name='id_medico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.medico', verbose_name='Nombre del Medico'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='examen',
            field=models.ManyToManyField(to='citas.examen'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='id_cita',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.cita', verbose_name='Cita'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='receta',
            field=models.ManyToManyField(to='citas.receta'),
        ),
        migrations.AddField(
            model_name='cita',
            name='esp_medic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='citas.especialidad_medico', verbose_name='Disponibilidad'),
        ),
        migrations.AddField(
            model_name='cita',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='especialidad_medico',
            constraint=models.UniqueConstraint(fields=('id_medico', 'id_especialidad', 'horario', 'consul'), name='med_esp_di_hh'),
        ),
        migrations.AddConstraint(
            model_name='especialidad_medico',
            constraint=models.UniqueConstraint(fields=('horario', 'consul', 'fecha_cita'), name='med_esp'),
        ),
    ]
